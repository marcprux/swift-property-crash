#!/bin/bash
DEFAULT_BUILD_CONFIGURATION="debug"
SCRIPT_NAME="examples"

usage()
{
    echo "usage: utils/$SCRIPT_NAME [OPTION...]
  -c, --configuration       swift build configuration mode, default '$DEFAULT_BUILD_CONFIGURATION'"
}

error()
{
    echo $1
    exit 1
}

check()
{
    message=$1
    shift
    echo $@
    "$@" || error "$message"
}

build_configuration=$DEFAULT_BUILD_CONFIGURATION

while [ "$1" != "" ] ; do
    case $1 in
    -c | --configuration )
        shift
        build_configuration=$1
        ;;
    * )
        usage
        exit 1
    esac
    shift
done

swift build -c $build_configuration

# run `DecodeBasic` example
check   "error: runtime error" \
        .build/$build_configuration/DecodeBasic

for file in examples/decode-basic/*.jpg ; do
    size=$(identify -format "%wx%h" jpg:$file)
    convert -depth 8 -size $size "rgb:$file.rgb" "png:$file.rgb.png"
done

# run `EncodeBasic` example
check   "error: runtime error" \
        .build/$build_configuration/EncodeBasic

# run `DecodeAdvanced` example
check   "error: runtime error" \
        .build/$build_configuration/DecodeAdvanced

for file in examples/decode-advanced/*.gray ; do
    size=$(echo $file | sed -r 's/.*\.([0-9]+)x([0-9]+)\.gray/\1x\2/')
    convert -depth 8 -size $size "gray:$file" "png:$file.png"
done
for file in examples/decode-advanced/*.jpg ; do
    size=$(identify -format "%wx%h" jpg:$file)
    convert -depth 8 -size $size "rgb:$file.rgb" "png:$file.rgb.png"
done

# run `EncodeAdvanced` example
check   "error: runtime error" \
        .build/$build_configuration/EncodeAdvanced

# run `InMemory` example
check   "error: runtime error" \
        .build/$build_configuration/InMemory
for file in examples/in-memory/*.jpg ; do
    if [ -f $file.rgb ]; then
        size=$(identify -format "%wx%h" jpg:$file)
        convert -depth 8 -size $size "rgb:$file.rgb" "png:$file.rgb.png"
    fi
done

# run `DecodeOnline` example
check   "error: runtime error" \
        .build/$build_configuration/DecodeOnline
for file in examples/decode-online/*.jpg ; do
    size=$(identify -format "%wx%h" jpg:$file)
done
for file in examples/decode-online/*.rgb ; do
    convert -depth 8 -size $size "rgb:$file" "png:$file.png"
done

# run `Recompress` example
check   "error: runtime error" \
        .build/$build_configuration/Recompress

# run `Rotate` example
check   "error: runtime error" \
        .build/$build_configuration/Rotate examples/rotate/karlie-kwk-wwdc-2017.jpg examples/rotate/karlie-kwk-wwdc-2017-ii.jpg --rotation ii
check   "error: runtime error" \
        .build/$build_configuration/Rotate examples/rotate/karlie-kwk-wwdc-2017.jpg examples/rotate/karlie-kwk-wwdc-2017-iii.jpg --rotation iii
check   "error: runtime error" \
        .build/$build_configuration/Rotate examples/rotate/karlie-kwk-wwdc-2017.jpg examples/rotate/karlie-kwk-wwdc-2017-iv.jpg --rotation iv

# run `CustomColor` example
check   "error: runtime error" \
        .build/$build_configuration/CustomColor
for file in examples/custom-color/*.rgb ; do
    convert -depth 16 -endian msb -size 1000x200 rgb:$file -depth 16 png:$file-16.png
    convert -depth 16 -endian msb -size 1000x200 rgb:$file -depth 8  png:$file-8.png
done
